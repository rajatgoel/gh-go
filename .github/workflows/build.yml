name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
  - cron: '0 10 * * 1' # run "At 10:00 on Monday"

jobs:
  run:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Go Format
        run: gofmt -w . && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: Go Lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: latest

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Generate
        run: go generate ./... && git diff --exit-code

      - name: Go Build
        run: go build -o /dev/null ./...

      - name: Go Test
        run: go test -v -count=1 -race -shuffle=on ./...

      - name: Go Benchmark
        run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x ./...

      - name: Go Vuln Check
        run: go install golang.org/x/vuln/cmd/govulncheck@latest && govulncheck -test ./...

      - name: Go Deadcode
        run: go install golang.org/x/tools/cmd/deadcode@latest && if [ -n "`deadcode ./...`" ]; then exit 1; fi
